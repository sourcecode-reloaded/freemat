Windows XP / MingW / CMake 

- Install Mingw and MSYS http://www.mingw.org/. You will need gcc and g77 packages.
- Install OpenSource (Mingw) version of Qt 4.3 (4.1 should work too).
- Install CMake (version 2.4.7 or later). Both Win32 version and 
cygwin versions should work (if you have cygwin installed). http://www.cmake.org
- Install BLAS or ATLAS. 

Windows XP / Visual Studio Express / CMake 

- Install CMake (version 2.4.7 or later) for Win32. http://www.cmake.org
- Install f2c
	Download f2c and libf2c sources from http://netlib.sandia.gov/f2c/index.html. Uncompress. 
	Build:
	cd libf2c
	<Path To Visual Studio Express>\VC\vcvarsall.bat
	nmake -f makefile.vc
	copy vcf2c.lib ..

	cd ../f2c/src
	nmake -f makefile.vc f2c.exe
	copy f2c.exe ..\..
	copy f2c.h ..\..
Add f2c directory to your path.

- Build ffcall
	cd <FreeMat source dir>\dependencies\ffcall
	<Path To Visual Studio Express>\VC\vcvarsall.bat
	nmake -f makefile.msvc

- Download Clapack for Win32. http://www.netlib.org/clapack/ 
(direct link http://www.netlib.org/clapack/CLAPACK3-Windows.zip)
	Follow instructions in MSWin-Notes.txt to build clapack and blas.
	Copy clapack.lib and blas.lib into <CMake source>\dependencies\bin or any
	directory in your PATH environment.

- Unpack fftw-3.1.2-dll.zip (URL ?) into <CMake source>\dependencies\bin or any
	directory in your PATH environment. Follow directions in README-Windows file to 
	create import libraries.

- Download and build zlib-1.2.3. (URL ?)
	Build using VC project file from zlib\projects\visualc6. Set active configuration to 
	DLL release.
	Copy zlib1.{lib, dll} files into <CMake source>\dependencies\bin.
	Copy zlib.h from zlib directory into <CMake source>\dependencies\bin.


Mac OS X 10.3.9

- Install Developer Tools
- Install Qt4.1
- Install fink
- Install fortran
- Install libavcall into /usr/local:

yum install atlas-sse2-devel.i386

mkdir depends
cd depends
wget ftp://ftp.santafe.edu/pub/gnu/ffcall-1.10.tar.gz
tar xvf ffcall-1.10.tar.gz
cd ffcall-1.10
./configure
make && make install
cd ..

- Install fftw and fftwf into /usr/local - we build these
in two seperate directories 
wget http://www.fftw.org/fftw-3.1.2.tar.gz
tar xvfz fftw-3.1.2.tar.gz
cd fftw-3.1.2
mkdir build_fftw
cd build_fftw
../configure
make && make install
cd ..
mkdir build_fftwf
cd build_fftwf
../configure --enable-single --enable-altivec
make && make install

- Install ARPACK into /usr/local
wget http://www.caam.rice.edu/software/ARPACK/SRC/arpack96.tar.gz
tar xvfz arpack96.tar.gz
cd ARPACK
cd SRC
g77 -c *.f
cd ../UTIL
g77 -c *.f
cd ..
ar crs libarpack.a SRC/*.o UTIL/*.o
cp libarpack.a /usr/local/lib/.

- Install UMFPACK into /usr/local
wget http://www.cise.ufl.edu/research/sparse/umfpack/current/UMFPACK.tar.gz
wget http://www.cise.ufl.edu/research/sparse/UFconfig/current/UFconfig.tar.gz
wget http://www.cise.ufl.edu/research/sparse/amd/current/AMD.tar.gz

cd AMD
make lib
cd ../UMFPACK
make library
cd ..
cp AMD/Lib/libamd.a /usr/local/lib/.
cp AMD/Include/*.h /usr/local/include/.
cp UMFPACK/Lib/libumfpack.a /usr/local/lib/.
cp UMFPACK/Include/*.h /usr/local/include/.
cp UFconfig/UFconfig.h /usr/local/include/.



******************************************************************************

To build FreeMat...

1.  Configure and make
2.  make distcheck

--> This is the source distro... (unless one of the following steps fails)

3.  Unpack the new source tree
4.  mkdir cbuild
5.  cd cbuild
6.  ../configure --host=i686-mingw32 --build=i686-pc-linux CPPFLAGS=-I/home/basu/dev/trunk/cross/include LDFLAGS=-L/home/basu/dev/trunk/cross/lib                                                                            
7. make
8. make package
